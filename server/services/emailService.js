// services/emailService.js
const nodemailer = require('nodemailer');

// Configuration du transporteur email
const createTransporter = () => {
  return nodemailer.createTransport({
    host: process.env.SMTP_HOST,
    port: process.env.SMTP_PORT,
    secure: false, // true pour 465, false pour autres ports
    auth: {
      user: process.env.SMTP_EMAIL,
      pass: process.env.SMTP_PASSWORD
    }
  });
};

// Templates d'emails
const emailTemplates = {
  // Email de v√©rification
  verification: (name, verificationUrl) => ({
    subject: 'V√©rifiez votre compte Bridge',
    html: `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>V√©rification de compte</title>
        <style>
          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
          .container { max-width: 600px; margin: 0 auto; padding: 20px; }
          .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; text-align: center; padding: 30px; border-radius: 10px 10px 0 0; }
          .content { background: #f9f9f9; padding: 30px; border-radius: 0 0 10px 10px; }
          .button { display: inline-block; background: #667eea; color: white; padding: 15px 30px; text-decoration: none; border-radius: 5px; margin: 20px 0; }
          .footer { text-align: center; margin-top: 20px; color: #666; font-size: 14px; }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header">
            <h1>üåâ Bridge</h1>
            <h2>V√©rifiez votre compte</h2>
          </div>
          <div class="content">
            <h3>Bonjour ${name} !</h3>
            <p>Merci de vous √™tre inscrit sur <strong>Bridge</strong>. Pour compl√©ter votre inscription, veuillez v√©rifier votre adresse email en cliquant sur le bouton ci-dessous :</p>
            <div style="text-align: center;">
              <a href="${verificationUrl}" class="button">V√©rifier mon email</a>
            </div>
            <p>Ou copiez et collez ce lien dans votre navigateur :</p>
            <p style="word-break: break-all; background: #eee; padding: 10px; border-radius: 5px;">${verificationUrl}</p>
            <p><strong>Note :</strong> Ce lien expire dans 24 heures.</p>
            <p>Si vous n'avez pas cr√©√© de compte sur Bridge, vous pouvez ignorer cet email.</p>
          </div>
          <div class="footer">
            <p>¬© 2024 Bridge. Tous droits r√©serv√©s.</p>
          </div>
        </div>
      </body>
      </html>
    `
  }),

  // Email de bienvenue
  welcome: (name, isGoogleAuth = false) => ({
    subject: 'Bienvenue sur Bridge ! üéâ',
    html: `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Bienvenue sur Bridge</title>
        <style>
          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
          .container { max-width: 600px; margin: 0 auto; padding: 20px; }
          .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; text-align: center; padding: 30px; border-radius: 10px 10px 0 0; }
          .content { background: #f9f9f9; padding: 30px; border-radius: 0 0 10px 10px; }
          .button { display: inline-block; background: #28a745; color: white; padding: 15px 30px; text-decoration: none; border-radius: 5px; margin: 20px 0; }
          .feature { background: white; padding: 20px; margin: 10px 0; border-radius: 5px; border-left: 4px solid #667eea; }
          .footer { text-align: center; margin-top: 20px; color: #666; font-size: 14px; }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header">
            <h1>üåâ Bridge</h1>
            <h2>Bienvenue ${name} !</h2>
          </div>
          <div class="content">
            <h3>F√©licitations ! üéâ</h3>
            <p>Votre compte Bridge a √©t√© ${isGoogleAuth ? 'cr√©√© via Google' : 'cr√©√© et v√©rifi√©'} avec succ√®s ! Nous sommes ravis de vous accueillir dans notre communaut√©.</p>
            
            <h4>Que pouvez-vous faire maintenant ?</h4>
            
            <div class="feature">
              <h5>üìä Cr√©er des questionnaires</h5>
              <p>Concevez facilement des questionnaires personnalis√©s pour collecter des donn√©es.</p>
            </div>
            
            <div class="feature">
              <h5>üìà Analyser les r√©sultats</h5>
              <p>Visualisez et analysez les r√©ponses avec nos outils int√©gr√©s.</p>
            </div>
            
            <div class="feature">
              <h5>ü§ù Collaborer</h5>
              <p>Partagez vos questionnaires et collaborez avec votre √©quipe.</p>
            </div>
            
            <div style="text-align: center; margin: 30px 0;">
              <a href="${process.env.CLIENT_URL}/dashboard" class="button">Commencer maintenant</a>
            </div>
            
            <p>Si vous avez des questions, n'h√©sitez pas √† nous contacter. Notre √©quipe est l√† pour vous aider !</p>
            
            <p>Bonne exploration ! üöÄ</p>
            
            <p><strong>L'√©quipe Bridge</strong></p>
          </div>
          <div class="footer">
            <p>¬© 2024 Bridge. Tous droits r√©serv√©s.</p>
          </div>
        </div>
      </body>
      </html>
    `
  }),

  // Email de r√©initialisation de mot de passe
  passwordReset: (name, resetUrl) => ({
    subject: 'R√©initialisation de votre mot de passe Bridge',
    html: `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>R√©initialisation de mot de passe</title>
        <style>
          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
          .container { max-width: 600px; margin: 0 auto; padding: 20px; }
          .header { background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%); color: white; text-align: center; padding: 30px; border-radius: 10px 10px 0 0; }
          .content { background: #f9f9f9; padding: 30px; border-radius: 0 0 10px 10px; }
          .button { display: inline-block; background: #ff6b6b; color: white; padding: 15px 30px; text-decoration: none; border-radius: 5px; margin: 20px 0; }
          .warning { background: #fff3cd; border: 1px solid #ffeaa7; border-radius: 5px; padding: 15px; margin: 20px 0; }
          .footer { text-align: center; margin-top: 20px; color: #666; font-size: 14px; }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header">
            <h1>üåâ Bridge</h1>
            <h2>R√©initialisation de mot de passe</h2>
          </div>
          <div class="content">
            <h3>Bonjour ${name},</h3>
            <p>Nous avons re√ßu une demande de r√©initialisation de mot de passe pour votre compte Bridge.</p>
            
            <div class="warning">
              <strong>‚ö†Ô∏è Important :</strong> Si vous n'avez pas demand√© cette r√©initialisation, ignorez cet email. Votre mot de passe restera inchang√©.
            </div>
            
            <p>Pour r√©initialiser votre mot de passe, cliquez sur le bouton ci-dessous :</p>
            
            <div style="text-align: center;">
              <a href="${resetUrl}" class="button">R√©initialiser mon mot de passe</a>
            </div>
            
            <p>Ou copiez et collez ce lien dans votre navigateur :</p>
            <p style="word-break: break-all; background: #eee; padding: 10px; border-radius: 5px;">${resetUrl}</p>
            
            <div class="warning">
              <strong>‚è∞ Attention :</strong> Ce lien expire dans <strong>1 heure</strong> pour votre s√©curit√©.
            </div>
            
            <p>Apr√®s avoir cliqu√© sur le lien, vous pourrez cr√©er un nouveau mot de passe s√©curis√©.</p>
            
            <p>Si vous avez des questions ou des pr√©occupations, contactez notre support.</p>
            
            <p>Cordialement,<br><strong>L'√©quipe Bridge</strong></p>
          </div>
          <div class="footer">
            <p>¬© 2024 Bridge. Tous droits r√©serv√©s.</p>
          </div>
        </div>
      </body>
      </html>
    `
  }),

  // Email de confirmation de r√©initialisation
  passwordResetConfirmation: (name) => ({
    subject: 'Mot de passe modifi√© avec succ√®s',
    html: `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Mot de passe modifi√©</title>
        <style>
          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
          .container { max-width: 600px; margin: 0 auto; padding: 20px; }
          .header { background: linear-gradient(135deg, #28a745 0%, #20c997 100%); color: white; text-align: center; padding: 30px; border-radius: 10px 10px 0 0; }
          .content { background: #f9f9f9; padding: 30px; border-radius: 0 0 10px 10px; }
          .success { background: #d4edda; border: 1px solid #c3e6cb; color: #155724; border-radius: 5px; padding: 15px; margin: 20px 0; }
          .footer { text-align: center; margin-top: 20px; color: #666; font-size: 14px; }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header">
            <h1>üåâ Bridge</h1>
            <h2>‚úÖ Mot de passe modifi√©</h2>
          </div>
          <div class="content">
            <h3>Bonjour ${name},</h3>
            
            <div class="success">
              <strong>‚úÖ Succ√®s !</strong> Votre mot de passe a √©t√© modifi√© avec succ√®s.
            </div>
            
            <p>Votre mot de passe Bridge a √©t√© mis √† jour le ${new Date().toLocaleString('fr-FR')}.</p>
            
            <p>Vous pouvez maintenant vous connecter avec votre nouveau mot de passe.</p>
            
            <p><strong>Pour votre s√©curit√© :</strong></p>
            <ul>
              <li>Gardez votre mot de passe confidentiel</li>
              <li>Utilisez un mot de passe unique pour Bridge</li>
              <li>Activez l'authentification √† deux facteurs si disponible</li>
            </ul>
            
            <p>Si vous n'avez pas effectu√© cette modification, contactez imm√©diatement notre support.</p>
            
            <p>Cordialement,<br><strong>L'√©quipe Bridge</strong></p>
          </div>
          <div class="footer">
            <p>¬© 2024 Bridge. Tous droits r√©serv√©s.</p>
          </div>
        </div>
      </body>
      </html>
    `
  })
};

// Fonctions d'envoi d'emails
const sendEmail = async (to, template, data) => {
  try {
    // Cr√©er le transporter √† chaque envoi
    const transporter = createTransporter();
    
    // G√©n√©rer le contenu de l'email
    const emailContent = template(data.name, ...Object.values(data).slice(1));
    
    const mailOptions = {
      from: `"Bridge App" <${process.env.SMTP_EMAIL}>`, // Correction: utiliser SMTP_EMAIL au lieu de SMTP_USER
      to: to,
      subject: emailContent.subject,
      html: emailContent.html
    };

    console.log('Tentative d\'envoi email vers:', to);
    const info = await transporter.sendMail(mailOptions);
    console.log('Email envoy√© avec succ√®s:', info.messageId);
    return { success: true, messageId: info.messageId };
  } catch (error) {
    console.error('Erreur lors de l\'envoi de l\'email:', error);
    return { success: false, error: error.message };
  }
};

// Fonctions sp√©cialis√©es pour chaque type d'email
const sendVerificationEmail = async (user, verificationToken) => {
  const verificationUrl = `${process.env.CLIENT_URL}/verify-email?token=${verificationToken}`;
  return await sendEmail(user.email, emailTemplates.verification, {
    name: user.name,
    verificationUrl
  });
};

const sendWelcomeEmail = async (user, isGoogleAuth = false) => {
  return await sendEmail(user.email, emailTemplates.welcome, {
    name: user.name,
    isGoogleAuth
  });
};

const sendPasswordResetEmail = async (user, resetToken) => {
  const resetUrl = `${process.env.CLIENT_URL}/reset-password?token=${resetToken}`;
  return await sendEmail(user.email, emailTemplates.passwordReset, {
    name: user.name,
    resetUrl
  });
};

const sendPasswordResetConfirmation = async (user) => {
  return await sendEmail(user.email, emailTemplates.passwordResetConfirmation, {
    name: user.name
  });
};

// Fonction de test de la configuration email
const testEmailConfiguration = async () => {
  try {
    const transporter = createTransporter();
    await transporter.verify();
    console.log('Configuration email valide ‚úÖ');
    return true;
  } catch (error) {
    console.error('Erreur configuration email ‚ùå:', error);
    return false;
  }
};

module.exports = {
  sendVerificationEmail,
  sendWelcomeEmail,
  sendPasswordResetEmail,
  sendPasswordResetConfirmation,
  testEmailConfiguration
};